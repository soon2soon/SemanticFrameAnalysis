1	I	_	PRP	PRP	_	3	nsubj	_	_
2	always	_	RB	RB	_	3	advmod	_	_
3	use	_	VBP	VBP	_	0	root	_	_
4	metra	_	JJ	JJ	_	3	acomp	_	_
5	to	_	TO	TO	_	6	aux	_	_
6	get	_	VB	VB	_	4	xcomp	_	_
7	to	_	TO	TO	_	6	prep	_	_
8	the	_	DT	DT	_	9	det	_	_
9	city	_	NN	NN	_	7	pobj	_	_
10	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
11	its	_	PRP$	PRP$	_	15	poss	_	_
12	just	_	RB	RB	_	15	advmod	_	_
13	a	_	DT	DT	_	15	det	_	_
14	pain	_	NN	NN	_	15	nn	_	_
15	driving	_	NN	NN	_	9	dep	_	_
16	my	_	PRP$	PRP$	_	17	poss	_	_
17	car	_	NN	NN	_	15	dep	_	_
18	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
19	Its	_	PRP$	PRP$	_	20	poss	_	_
20	cheap	_	NN	NN	_	6	dobj	_	_
21	,	_	,	,	_	0	erased	_	_
22	fast	_	RB	RB	_	6	advmod	_	_
23	,	_	,	,	_	0	erased	_	_
24	usually	_	RB	RB	_	25	advmod	_	_
25	on	_	IN	IN	_	6	prep	_	_
26	time	_	NN	NN	_	25	pobj	_	_
27	and	_	CC	CC	_	6	cc	_	_
28	clean	_	VB	VB	_	6	conj	_	_
29	.	_	.	.	_	0	erased	_	_

1	If	_	IN	IN	_	6	mark	_	_
2	you	_	PRP	PRP	_	6	nsubj	_	_
3	are	_	VBP	VBP	_	6	cop	_	_
4	a	_	DT	DT	_	6	det	_	_
5	lazy	_	JJ	JJ	_	6	amod	_	_
6	driver	_	NN	NN	_	0	root	_	_
7	like	_	IN	IN	_	6	prep	_	_
8	me	_	PRP	PRP	_	7	pobj	_	_
9	and	_	CC	CC	_	6	cc	_	_
10	want	_	VBP	VBP	_	6	conj	_	_
11	to	_	TO	TO	_	13	aux	_	_
12	just	_	RB	RB	_	13	advmod	_	_
13	chill	_	VB	VB	_	10	xcomp	_	_
14	take	_	VB	VB	_	13	ccomp	_	_
15	the	_	DT	DT	_	16	det	_	_
16	metra	_	NN	NN	_	14	dobj	_	_
17	where	_	WRB	WRB	_	20	advmod	_	_
18	ever	_	RB	RB	_	20	advmod	_	_
19	you	_	PRP	PRP	_	20	nsubj	_	_
20	go	_	VBP	VBP	_	14	advcl	_	_
21	,	_	,	,	_	0	erased	_	_
22	its	_	PRP$	PRP$	_	23	poss	_	_
23	definetly	_	NN	NN	_	20	dobj	_	_
24	worth	_	IN	IN	_	20	prep	_	_
25	the	_	DT	DT	_	26	det	_	_
26	penny	_	NN	NN	_	24	pobj	_	_

